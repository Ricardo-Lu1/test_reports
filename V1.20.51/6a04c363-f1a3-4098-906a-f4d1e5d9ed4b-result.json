{"name": "test_16_create_schedule_with_bedtime_end_with_previous_mode_after_30min_when_lamp_status_warm_white", "status": "failed", "statusDetails": {"message": "AssertionError: Error : create schedule for light_1 fail! SceneId should be 11, but was 10", "trace": "request = <FixtureRequest for <Function test_16_create_schedule_with_bedtime_end_with_previous_mode_after_30min_when_lamp_status_warm_white>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:145: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:115: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x0000026316747E08>\nlight_name = 'light_1', light_scene = 'Warm white'\n\n    @then(parsers.parse('check schedule for {light_name} with {light_scene} mode'))\n    def check_schedule_by_mqtt(target, light_name, light_scene):\n        response = target.udp.get_pilot_phone(light_name)\n        res_light_scene_id = response[\"result\"][\"sceneId\"]\n        expect_light_scene_id = int(translator_scene_id(light_scene))\n        if res_light_scene_id != expect_light_scene_id:\n            logger.info(\"Error : create schedule for \" + light_name + \" fail! SceneId should be \" +\n                        str(expect_light_scene_id) + \", but was \" + str(res_light_scene_id))\n            assert False, \"Error : create schedule for \" + light_name + \" fail! SceneId should be \" + \\\n>                         str(expect_light_scene_id) + \", but was \" + str(res_light_scene_id)\nE           AssertionError: Error : create schedule for light_1 fail! SceneId should be 11, but was 10\n\n..\\..\\Steps\\schedule_action_steps.py:327: AssertionError"}, "description": "schedule_actions.feature: Create a schedule with action \"Bedtime\" and end with \"Previous mode\" after 30min when lamp original status is \"Warm White\"", "attachments": [{"name": "log", "source": "ef828f72-c60c-4632-8a8f-f5a6c7865f61-attachment.txt", "type": "text/plain"}], "start": 1602809082171, "stop": 1602811535387, "uuid": "9c04585b-d2a8-4d8d-9f03-e4fc3e906de9", "historyId": "d4413e09cd5ee8d95cfd195d5830bfff", "testCaseId": "c0424a12301421d91376b68d57d15381", "fullName": "Test_Suites.Tests.test_regression_product.test_08_schedule_by_mqtt#test_16_create_schedule_with_bedtime_end_with_previous_mode_after_30min_when_lamp_status_warm_white", "labels": [{"name": "feature", "value": "Create schedule by mqtt"}, {"name": "story", "value": "Create a schedule with action \"Bedtime\" and end with \"Previous mode\" after 30min when lamp original status is \"Warm White\""}, {"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.test_regression_product"}, {"name": "suite", "value": "test_08_schedule_by_mqtt"}, {"name": "host", "value": "DESKTOP-UME284Q"}, {"name": "thread", "value": "144584-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.test_regression_product.test_08_schedule_by_mqtt"}]}