{"name": "test_16_create_schedule_with_bedtime_end_with_previous_mode_after_30min_when_lamp_status_warm_white", "status": "broken", "statusDetails": {"message": "TimeoutError: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond", "trace": "request = <FixtureRequest for <Function test_16_create_schedule_with_bedtime_end_with_previous_mode_after_30min_when_lamp_status_warm_white>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:145: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:115: in _execute_step_function\n    return_value = step_func(**kwargs)\n..\\..\\Steps\\schedule_action_steps.py:280: in create_schedule_with_end_by_mqtt\n    str_start_time)\n..\\..\\..\\Wrapper\\wrapper_mqtt.py:77: in set_schedule_with_end\n    mqtt_server.publish_message(topic, cmd)\n..\\..\\..\\Utils\\mqtt_service.py:47: in publish_message\n    self.connect()\n..\\..\\..\\Utils\\mqtt_service.py:25: in connect\n    self.client.connect(self.server, self.port, 60)\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\paho\\mqtt\\client.py:937: in connect\n    return self.reconnect()\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\paho\\mqtt\\client.py:1071: in reconnect\n    sock = self._create_socket_connection()\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\paho\\mqtt\\client.py:3522: in _create_socket_connection\n    return socket.create_connection(addr, source_address=source, timeout=self._keepalive)\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\socket.py:728: in create_connection\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\naddress = ('mqtt-dev-2.wizconnected.cn', 1883), timeout = 60\nsource_address = ('', 0)\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default.\n        \"\"\"\n    \n        host, port = address\n        err = None\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond\n\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\socket.py:716: TimeoutError"}, "description": "schedule_actions.feature: Create a schedule with action \"Bedtime\" and end with \"Previous mode\" after 30min when lamp original status is \"Warm White\"", "attachments": [{"name": "log", "source": "ac29ebb3-3d30-4f48-8bd7-54e47fa44434-attachment.txt", "type": "text/plain"}], "start": 1602751720736, "stop": 1602751750930, "uuid": "1327e970-6f2c-47ed-9356-a6cbb76b690a", "historyId": "d4413e09cd5ee8d95cfd195d5830bfff", "testCaseId": "c0424a12301421d91376b68d57d15381", "fullName": "Test_Suites.Tests.test_regression_product.test_08_schedule_by_mqtt#test_16_create_schedule_with_bedtime_end_with_previous_mode_after_30min_when_lamp_status_warm_white", "labels": [{"name": "feature", "value": "Create schedule by mqtt"}, {"name": "story", "value": "Create a schedule with action \"Bedtime\" and end with \"Previous mode\" after 30min when lamp original status is \"Warm White\""}, {"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.test_regression_product"}, {"name": "suite", "value": "test_08_schedule_by_mqtt"}, {"name": "host", "value": "DESKTOP-UME284Q"}, {"name": "thread", "value": "37964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.test_regression_product.test_08_schedule_by_mqtt"}]}