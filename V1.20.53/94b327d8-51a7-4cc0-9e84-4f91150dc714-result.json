{"name": "test_tcp_comm_dimming", "status": "failed", "statusDetails": {"message": "AssertionError: check light_1 dim fail! should be 80, but was 100", "trace": "request = <FixtureRequest for <Function test_tcp_comm_dimming>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:145: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:115: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x00000180C723F888>\nlight_name = 'light_1', dimming_level = '80'\n\n    @when(parsers.parse('Check if {light_name} dim to {dimming_level}'))\n    def check_light_dimming_level(target, light_name, dimming_level):\n        \"\"\"\n        - Narrative:\n            check {light_name} dimming_level status from light\n        \"\"\"\n        logger.info(\"check light status\")\n        response = target.udp.get_pilot_phone(light_name)\n        logger.info(response)\n        actul_dimming_value = int(response[\"result\"][\"dimming\"])\n    \n        if int(actul_dimming_value) == int(dimming_level):\n            logger.info(light_name + \" is dimmed to \" + str(dimming_level) + \" successfully!\")\n        else:\n            logger.info(\"Error : check \" + light_name + \" dim fail! should be \" + str(dimming_level) +\n                        \", but was \" + str(actul_dimming_value))\n            assert False, \"check \" + light_name + \" dim fail! should be \" + str(dimming_level) + \\\n>                         \", but was \" + str(actul_dimming_value)\nE           AssertionError: check light_1 dim fail! should be 80, but was 100\n\n..\\..\\Steps\\control_lamp_steps.py:653: AssertionError"}, "description": "tcp_comm.feature: Single light control by mqtt --- Dimming", "attachments": [{"name": "log", "source": "bebec281-82a0-44aa-aa78-9cfe88e69b6d-attachment.txt", "type": "text/plain"}], "start": 1602837373858, "stop": 1602837399052, "uuid": "897e98fd-c22a-4d62-b849-446dec745172", "historyId": "1311ff24514ad204b2972dfebdfd8a0c", "testCaseId": "473b604e60e8be97ebaedfa69a6fc367", "fullName": "Test_Suites.Tests.test_regression_product.test_06_tcp_comm#test_tcp_comm_dimming", "labels": [{"name": "feature", "value": "TCP Communication"}, {"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.test_regression_product"}, {"name": "suite", "value": "test_06_tcp_comm"}, {"name": "host", "value": "DESKTOP-UME284Q"}, {"name": "thread", "value": "187868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.test_regression_product.test_06_tcp_comm"}]}