{"name": "test_tcp_comm_change_mode_rgb[light_1-Warm white]", "status": "failed", "statusDetails": {"message": "AssertionError: check light_1 change light mode fail! should be 11, but was 31", "trace": "request = <FixtureRequest for <Function test_tcp_comm_change_mode_rgb[light_1-Warm white]>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:145: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\600008165\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:115: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x00000180C723F888>\nlight_name = 'light_1', light_mode = 'Warm white'\n\n    @when(parsers.parse('Check if {light_name} change to light mode {light_mode} successfully'))\n    def check_change_light_mode(target, light_name, light_mode):\n        \"\"\"\n                - Narrative:\n                    Check if {light_name} light mode is {light_mode} from light\n        \"\"\"\n        logger.info(\"check light mode\")\n        scene_id = translator_scene_id(light_mode)\n        response = target.udp.get_pilot_phone(light_name, custom_ip=\"\")\n        logger.info(\"getPilot response: \" + str(response))\n        actul_scene_id = int(response[\"result\"][\"sceneId\"])\n    \n        if int(actul_scene_id) == int(scene_id):\n            logger.info(light_name + \" is changed to \" + str(scene_id) + \" successfully!\")\n        else:\n            logger.info(\"Error : check \" + light_name + \" change light mode fail! should be \" + str(scene_id) +\n                        \", but was \" + str(actul_scene_id))\n            assert False, \"check \" + light_name + \" change light mode fail! should be \" + str(scene_id) + \\\n>                         \", but was \" + str(actul_scene_id)\nE           AssertionError: check light_1 change light mode fail! should be 11, but was 31\n\n..\\..\\Steps\\control_lamp_steps.py:789: AssertionError"}, "description": "tcp_comm.feature: Single light control by mqtt --- Change light mode for RGB light", "attachments": [{"name": "log", "source": "3dd80cdb-346a-4392-bdc5-0e684eec9639-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "light_name", "value": "'light_1'"}, {"name": "light_mode", "value": "'Warm white'"}], "start": 1602837522905, "stop": 1602837536001, "uuid": "ea9bf78f-d9bf-4621-9ca3-2c6e605fbf20", "historyId": "4071aa675e23047f9ef5e1df3a41e811", "testCaseId": "6afcdaac00e844e393923255117e237a", "fullName": "Test_Suites.Tests.test_regression_product.test_06_tcp_comm#test_tcp_comm_change_mode_rgb", "labels": [{"name": "feature", "value": "TCP Communication"}, {"name": "tag", "value": "@pytest.mark.usefixtures('light_name', 'light_mode')"}, {"name": "parentSuite", "value": "Test_Suites.Tests.test_regression_product"}, {"name": "suite", "value": "test_06_tcp_comm"}, {"name": "host", "value": "DESKTOP-UME284Q"}, {"name": "thread", "value": "187868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.test_regression_product.test_06_tcp_comm"}]}