{"name": "test_16_create_schedule_with_bedtime_end_with_previous_mode_after_30min_when_lamp_status_warm_white", "status": "failed", "statusDetails": {"message": "AssertionError: UDP state should be true, but was false", "trace": "request = <FixtureRequest for <Function test_16_create_schedule_with_bedtime_end_with_previous_mode_after_30min_when_lamp_status_warm_white>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x000002A49A508748>\nlight_name = 'light_1', light_scene = 'Warm white'\n\n    @then(parsers.parse('check schedule for {light_name} with {light_scene} mode'))\n    def check_schedule(target, light_name, light_scene):\n        # udp_sync_res = target.udp.get_udp_sync_pilot(light_name, \"schd\")\n        # logger.info(\"udp syncPilot:\" + str(udp_sync_res))\n    \n        # mqtt_res = target.mqtt.get_mqtt_sync_pilot(light_name)\n        response = target.udp.get_pilot(light_name)\n        logger.info(\"udp response:\" + str(response))\n    \n        expect_light_scene_id = int(translator_scene_id(light_scene))\n    \n        # check by udp\n        res_light_scene_id_udp = response[\"result\"][\"sceneId\"]\n        if response[\"result\"][\"state\"] is False:\n            logger.info(\"Error : UDP state should be true, but was false\")\n>           assert False, \"UDP state should be true, but was false\"\nE           AssertionError: UDP state should be true, but was false\n\n..\\..\\Steps\\schedule_action_steps.py:471: AssertionError"}, "description": "schedule.feature: Create a schedule with action \"Bedtime\" and end with \"Previous mode\" after 30min when lamp original status is \"Warm White\"", "attachments": [{"name": "log", "source": "bdb59701-6fbf-43ed-a255-77cd9ff3b4e3-attachment.txt", "type": "text/plain"}], "start": 1611229544893, "stop": 1611231968448, "uuid": "2aecebb8-19c2-44c3-9d5e-0ee73cf050df", "historyId": "a8fed5e0ff0babf2077b321667120226", "testCaseId": "2b6288f894c860ed64b9b7e25a4f6160", "fullName": "Test_Suites.Tests.test_regression_module.test_08_schedule_by_mqtt#test_16_create_schedule_with_bedtime_end_with_previous_mode_after_30min_when_lamp_status_warm_white", "labels": [{"name": "feature", "value": "Create schedule by mqtt"}, {"name": "story", "value": "Create a schedule with action \"Bedtime\" and end with \"Previous mode\" after 30min when lamp original status is \"Warm White\""}, {"name": "tag", "value": "usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.test_regression_module"}, {"name": "suite", "value": "test_08_schedule_by_mqtt"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "14352-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.test_regression_module.test_08_schedule_by_mqtt"}]}