{
  "uid" : "abcaf42e81da9424",
  "name" : "test_single_tw_device_tcp_control_temperature[light_2-6500-wizappd]",
  "fullName" : "Test_Suites.Tests.test_regression_module.test_07_temperature_speed_light_mode#test_single_tw_device_tcp_control_temperature",
  "historyId" : "84054b42c4301530732a230c73b6f317",
  "time" : {
    "start" : 1611222489725,
    "stop" : 1611222499636,
    "duration" : 9911
  },
  "description" : "04_temperature_speed_light_mode.feature: Single TW device control via tcp - temperature",
  "descriptionHtml" : "<p>04_temperature_speed_light_mode.feature: Single TW device control via tcp - temperature</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: check light_2 light mode UDP syncPilot fail! should be 12, but was 0",
  "statusTrace" : "request = <FixtureRequest for <Function test_single_tw_device_tcp_control_temperature[light_2-6500-wizappd]>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\temperature_speed_light_mode_steps.py:65: in control_light_temperature_by_mqtt\n    check_udp_syncPilot_light_mode(target, light_name, \"Daylight\", \"udp\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x000002A49A508748>\nlight_name = 'light_2', light_mode = 'Daylight', act_type = 'udp'\n\n    @then(parsers.parse('Check udp syncPilot if {light_name} mode is changed to {light_mode} by {act_type}'))\n    def check_udp_syncPilot_light_mode(target, light_name, light_mode, act_type):\n        \"\"\"\n        - Narrative:\n            Check if {light_name} light mode is {light_mode} by udp syncPilot\n            {act_type}: udp syncPilot src; value: udp, wizappd(tcp), schd, intl, hb...\n        \"\"\"\n        logger.info(\"check \" + light_name + \" udp syncPilot light mode\")\n        scene_id = translator_scene_id(light_mode)\n        udp_sync_res = target.udp.get_udp_sync_pilot(light_name, act_type)\n        logger.info(\"udp syncPilot:\" + str(udp_sync_res))\n    \n        if int(udp_sync_res[\"params\"][\"sceneId\"]) != int(scene_id):\n            logger.info(\"Error : check \" + light_name + \" light mode UDP syncPilot fail! should be \" + str(scene_id) +\n                        \", but was \" + str(udp_sync_res[\"params\"][\"sceneId\"]))\n            assert False, \"check \" + light_name + \" light mode UDP syncPilot fail! should be \" + str(scene_id) + \\\n>                         \", but was \" + str(udp_sync_res[\"params\"][\"sceneId\"])\nE           AssertionError: check light_2 light mode UDP syncPilot fail! should be 12, but was 0\n\n..\\..\\Steps\\temperature_speed_light_mode_steps.py:116: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "04_temperature_speed_light_mode.feature: Single TW device control via tcp - temperature",
    "status" : "failed",
    "statusMessage" : "AssertionError: check light_2 light mode UDP syncPilot fail! should be 12, but was 0",
    "statusTrace" : "request = <FixtureRequest for <Function test_single_tw_device_tcp_control_temperature[light_2-6500-wizappd]>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\temperature_speed_light_mode_steps.py:65: in control_light_temperature_by_mqtt\n    check_udp_syncPilot_light_mode(target, light_name, \"Daylight\", \"udp\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x000002A49A508748>\nlight_name = 'light_2', light_mode = 'Daylight', act_type = 'udp'\n\n    @then(parsers.parse('Check udp syncPilot if {light_name} mode is changed to {light_mode} by {act_type}'))\n    def check_udp_syncPilot_light_mode(target, light_name, light_mode, act_type):\n        \"\"\"\n        - Narrative:\n            Check if {light_name} light mode is {light_mode} by udp syncPilot\n            {act_type}: udp syncPilot src; value: udp, wizappd(tcp), schd, intl, hb...\n        \"\"\"\n        logger.info(\"check \" + light_name + \" udp syncPilot light mode\")\n        scene_id = translator_scene_id(light_mode)\n        udp_sync_res = target.udp.get_udp_sync_pilot(light_name, act_type)\n        logger.info(\"udp syncPilot:\" + str(udp_sync_res))\n    \n        if int(udp_sync_res[\"params\"][\"sceneId\"]) != int(scene_id):\n            logger.info(\"Error : check \" + light_name + \" light mode UDP syncPilot fail! should be \" + str(scene_id) +\n                        \", but was \" + str(udp_sync_res[\"params\"][\"sceneId\"]))\n            assert False, \"check \" + light_name + \" light mode UDP syncPilot fail! should be \" + str(scene_id) + \\\n>                         \", but was \" + str(udp_sync_res[\"params\"][\"sceneId\"])\nE           AssertionError: check light_2 light mode UDP syncPilot fail! should be 12, but was 0\n\n..\\..\\Steps\\temperature_speed_light_mode_steps.py:116: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8072ec9151c4f8ac",
      "name" : "log",
      "source" : "8072ec9151c4f8ac.txt",
      "type" : "text/plain",
      "size" : 2374
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Temperature, Speed And Light Mode"
  }, {
    "name" : "story",
    "value" : "TCP Device Control - TW Device"
  }, {
    "name" : "parentSuite",
    "value" : "Test_Suites.Tests.test_regression_module"
  }, {
    "name" : "suite",
    "value" : "test_07_temperature_speed_light_mode"
  }, {
    "name" : "host",
    "value" : "WIZ-LENOVOPT-SH0012"
  }, {
    "name" : "thread",
    "value" : "14352-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Test_Suites.Tests.test_regression_module.test_07_temperature_speed_light_mode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "act_type",
    "value" : "'wizappd'"
  }, {
    "name" : "light_name",
    "value" : "'light_2'"
  }, {
    "name" : "temperature",
    "value" : "'6500'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "abcaf42e81da9424.json",
  "parameterValues" : [ "'wizappd'", "'light_2'", "'6500'" ]
}