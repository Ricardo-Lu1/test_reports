{"name": "test_device_fw_force_ota_on", "status": "failed", "statusDetails": {"message": "AssertionError: Error : check ota status fail! Should be 3, but was 8", "trace": "request = <FixtureRequest for <Function test_device_fw_force_ota_on>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\device_fw_ota.py:60: in device_fw_ota\n    target.mqtt.check_update_ota_status(light_name, 3)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Wrapper.wrapper_mqtt.WrapperMQTT object at 0x0000014DC0F0E588>\nlight_name = 'light_1', expect_status = 3\n\n    def check_update_ota_status(self, light_name, expect_status):\n        topic = self.cloud_mqtt_cmd.create_topic_from_light(light_name)\n        start_time = datetime.datetime.now()\n        bl_loop = True\n        while bl_loop:\n            for mqtt_client in self.list_mqtt_client:\n                rcv_topic, rcv_msg = mqtt_client.get_subscribe_topic_message()\n                if topic == rcv_topic:\n                    if rcv_msg[\"method\"] == \"updateOta\":\n                        print(rcv_msg)\n                        res_status = int(rcv_msg[\"params\"][\"updateStatus\"])\n                        if int(rcv_msg[\"params\"][\"updateStatus\"]) == expect_status:\n                            mqtt_client.clear_subscribe_topic_message()\n                            bl_loop = False\n                            break\n                        else:\n                            mqtt_client.clear_subscribe_topic_message()\n                            assert False, \"Error : check ota status fail! Should be \" + str(expect_status) \\\n>                                         + \", but was \" + str(res_status)\nE                           AssertionError: Error : check ota status fail! Should be 3, but was 8\n\n..\\..\\..\\Wrapper\\wrapper_mqtt.py:464: AssertionError"}, "description": "02_device_fw_ota.feature: Force OTA(Auto-reboot) to a default version(Happy flow)", "attachments": [{"name": "log", "source": "eb394e0b-47ec-4c6c-9e11-5b1759056f94-attachment.txt", "type": "text/plain"}], "start": 1614137135971, "stop": 1614137157263, "uuid": "b959b595-4c65-44c5-97ff-e3a9a2c18474", "historyId": "1862a18fe9ec3da818c477399df03df2", "testCaseId": "8e5098d4925785d3bec22c46d30f90f8", "fullName": "Test_Suites.Tests.daily_regression_test.test_05_device_fw_ota#test_device_fw_force_ota_on", "labels": [{"name": "feature", "value": "Device FW OTA"}, {"name": "tag", "value": "product"}, {"name": "tag", "value": "module"}, {"name": "tag", "value": "usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.daily_regression_test"}, {"name": "suite", "value": "test_05_device_fw_ota"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "25124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.daily_regression_test.test_05_device_fw_ota"}]}