{"name": "test_20_create_schedule_with_wake_up_end_with_previous_mode_after_30min_when_lamp_status_off", "status": "failed", "statusDetails": {"message": "AssertionError: UDP state should be false, but was true", "trace": "request = <FixtureRequest for <Function test_20_create_schedule_with_wake_up_end_with_previous_mode_after_30min_when_lamp_status_off>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x00000171EFB90A88>\nlight_name = 'light_1', action = 'OFF'\n\n    @then(parsers.parse('Check udp getPilot if {light_name} status is changed to {action}'))\n    def check_udp_getPilot_light_status(target, light_name, action):\n        \"\"\"\n        - Narrative:\n            Send udp cmd 'getPilot' to check {light_name} light status ON/OFF/NL\n        \"\"\"\n        logger.info(\"check \" + light_name + \" udp setPilot status\")\n        response = target.udp.get_pilot(light_name)\n        logger.info(\"udp response:\" + str(response))\n    \n        if action == 'ON':\n            if response[\"result\"][\"state\"] is False:\n                logger.info(\"Error : UDP state should be true, but was false\")\n                assert False, \"UDP state should be true, but was false\"\n        elif action == 'OFF':\n            if response[\"result\"][\"state\"] is True:\n                logger.info(\"Error : UDP state should be false, but was true\")\n>               assert False, \"UDP state should be false, but was true\"\nE               AssertionError: UDP state should be false, but was true\n\n..\\..\\Steps\\temperature_speed_light_mode_steps.py:429: AssertionError"}, "description": "schedule.feature: Create a schedule with action \"Wake-up\" and end with \"Previous mode\" after 30min when lamp original status is \"OFF\"", "attachments": [{"name": "log", "source": "ea8ea794-6525-41bd-ab53-12c2cde0ea93-attachment.txt", "type": "text/plain"}], "start": 1614095915478, "stop": 1614098339927, "uuid": "319e3af9-63f9-4613-aec5-02847a1107dc", "historyId": "39a68b8ef5c03c395404e92d29d0238c", "testCaseId": "320c19b6f57e173abf18b8e8897cd138", "fullName": "Test_Suites.Tests.daily_regression_test.test_07_schedule_by_mqtt#test_20_create_schedule_with_wake_up_end_with_previous_mode_after_30min_when_lamp_status_off", "labels": [{"name": "story", "value": "Create a schedule with action \"Wake-up\" and end with \"Previous mode\" after 30min when lamp original status is \"OFF\""}, {"name": "feature", "value": "Create schedule by mqtt"}, {"name": "tag", "value": "module"}, {"name": "tag", "value": "product"}, {"name": "tag", "value": "usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.daily_regression_test"}, {"name": "suite", "value": "test_07_schedule_by_mqtt"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "24620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.daily_regression_test.test_07_schedule_by_mqtt"}]}