{"name": "test_device_control_on_off_nl_tcp[light_1-NL-wizappd-ON]", "status": "failed", "statusDetails": {"message": "AssertionError: check light_1 sceneId value should be 14, but was 11", "trace": "request = <FixtureRequest for <Function test_device_control_on_off_nl_tcp[light_1-NL-wizappd-ON]>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\on_off_nl_dimming_steps.py:97: in check_device_on_off_nl_udp\n    action)\n..\\..\\Steps\\on_off_nl_dimming_steps.py:315: in check_device_on_off_nl_status_is_right\n    check_device_level(light_name, 14, sceneId, \"sceneId\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nlight_name = 'light_1', Exp_level = 14, actual_level = 11, test_Func = 'sceneId'\n\n    def check_device_level(light_name, Exp_level, actual_level, test_Func):\n        if int(actual_level) != int(Exp_level):\n            logger.info(\n                \"Error : check \" + light_name + \" \" + str(test_Func) + \" value should be \" + str(Exp_level) + \\\n                \", but was \" + str(actual_level))\n            assert False, \"check \" + light_name + \" \" + str(test_Func) + \" value should be \" + str(Exp_level) + \\\n>                         \", but was \" + str(actual_level)\nE           AssertionError: check light_1 sceneId value should be 14, but was 11\n\n..\\..\\Steps\\on_off_nl_dimming_steps.py:272: AssertionError"}, "description": "03_on_off_nl_dimming.feature: ON/OFF/NL device control by TCP", "attachments": [{"name": "log", "source": "42978d75-6dd2-4398-a9f8-64fc12597b6d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "light_name", "value": "'light_1'"}, {"name": "action", "value": "'NL'"}, {"name": "act_type", "value": "'wizappd'"}, {"name": "pre_action", "value": "'ON'"}], "start": 1614072727011, "stop": 1614072739882, "uuid": "742a374f-13cf-41de-afcd-77bd09f20168", "historyId": "240e4394cf96104bbb518d11a2aa7f61", "testCaseId": "ffe1298e83e6509297a9d2c6b2faea02", "fullName": "Test_Suites.Tests.daily_regression_test.test_03_on_off_nl_dimming#test_device_control_on_off_nl_tcp", "labels": [{"name": "story", "value": "TCP Device Control"}, {"name": "feature", "value": "ON/OFF/NL/Dimming"}, {"name": "tag", "value": "module"}, {"name": "tag", "value": "product"}, {"name": "parentSuite", "value": "Test_Suites.Tests.daily_regression_test"}, {"name": "suite", "value": "test_03_on_off_nl_dimming"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "24620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.daily_regression_test.test_03_on_off_nl_dimming"}]}