{"name": "test_18_turn_off_then_turn_on_in_cool_white_mode_when_rhythms_playing_by_mqtt", "status": "failed", "statusDetails": {"message": "AssertionError: Error : check scene id by udp fail! Scene id should be 18, but was 6", "trace": "request = <FixtureRequest for <Function test_18_turn_off_then_turn_on_in_cool_white_mode_when_rhythms_playing_by_mqtt>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x00000171EFB90A88>\nrhythm_id = 2, light_name = 'light_1', scene_name = 'TV time'\n\n    @then(parsers.parse('check rhythm {rhythm_id} for {light_name} with scene {scene_name} by getPilot'))\n    def check_rhythm_by_getPilot(target, rhythm_id, light_name, scene_name):\n        time.sleep(5)\n        rhythm_id = int(rhythm_id)\n        scene_id = int(translator_scene_id(scene_name))\n        res_get_pilot = target.udp.get_pilot(light_name)\n        logger.info(\"udp response:\" + str(res_get_pilot))\n    \n        scene_id_udp = int(res_get_pilot[\"result\"][\"sceneId\"])\n    \n        # check by udp getPilot cmd\n        if \"schdPsetId\" in json_to_string(res_get_pilot):\n            schdpset_id_udp = int(res_get_pilot[\"result\"][\"schdPsetId\"])\n        else:\n            logger.info(\"Error : Error : check schdPset id by udp fail! Do not find schdPsetId.\")\n            assert False, \"Error : Error : check schdPset id by udp fail! Do not find schdPsetId.\"\n        if scene_id_udp != scene_id:\n            logger.info(\"Error : check scene id by udp fail! Scene id should be \"\n                        + str(scene_id) + \", but was \" + str(scene_id_udp))\n            assert False, \"Error : check scene id by udp fail! Scene id should be \" \\\n>                         + str(scene_id) + \", but was \" + str(scene_id_udp)\nE           AssertionError: Error : check scene id by udp fail! Scene id should be 18, but was 6\n\n..\\..\\Steps\\rhythm_action_steps.py:215: AssertionError"}, "description": "rhythm.feature: Turn off and then turn on in cool white mode when Rhythms playing", "attachments": [{"name": "log", "source": "a95f89c2-d839-43f9-8aed-c21504361c3f-attachment.txt", "type": "text/plain"}], "start": 1614076889689, "stop": 1614076917880, "uuid": "29657b4f-0e35-4531-afa8-f19e1903ed99", "historyId": "cc3d5de506ae8b99d30ad46a703c34b7", "testCaseId": "eed7ca50ceb47d7e812ad11b843afd59", "fullName": "Test_Suites.Tests.daily_regression_test.test_06_rhythm_by_mqtt#test_18_turn_off_then_turn_on_in_cool_white_mode_when_rhythms_playing_by_mqtt", "labels": [{"name": "feature", "value": "Test cases for rhythm"}, {"name": "story", "value": "Turn off and then turn on in cool white mode when Rhythms playing"}, {"name": "tag", "value": "module"}, {"name": "tag", "value": "product"}, {"name": "tag", "value": "usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.daily_regression_test"}, {"name": "suite", "value": "test_06_rhythm_by_mqtt"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "24620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.daily_regression_test.test_06_rhythm_by_mqtt"}]}