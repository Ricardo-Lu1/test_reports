{
  "uid" : "402e07d0d1b9b889",
  "name" : "test_15_create_schedule_with_bedtime_end_with_off_when_lamp_status_warm_white",
  "fullName" : "Test_Suites.Tests.daily_regression_test.test_07_schedule_by_mqtt#test_15_create_schedule_with_bedtime_end_with_off_when_lamp_status_warm_white",
  "historyId" : "31ba8af9e3d5680c08dde48bcb3ba5b7",
  "time" : {
    "start" : 1614084599452,
    "stop" : 1614085220778,
    "duration" : 621326
  },
  "description" : "schedule.feature: Create a schedule with action \"Bedtime\" and end with \"off\" when lamp original status is \"Warm White\"",
  "descriptionHtml" : "<p>schedule.feature: Create a schedule with action &quot;Bedtime&quot; and end with &quot;off&quot; when lamp original status is &quot;Warm White&quot;</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: UDP syncPilot state should be false, but was true",
  "statusTrace" : "request = <FixtureRequest for <Function test_15_create_schedule_with_bedtime_end_with_off_when_lamp_status_warm_white>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x00000171EFB90A88>\nlight_name = 'light_1', action = 'OFF', act_type = 'schd'\n\n    @then(parsers.parse('Check udp syncPilot if {light_name} status is changed to {action} by {act_type}'))\n    def check_udp_syncPilot_light_status(target, light_name, action, act_type):\n        \"\"\"\n        - Narrative:\n            Check {light_name} udp syncPilot light status ON/OFF/NL\n            {act_type}: udp syncPilot src; value: udp, wizappd(tcp), schd, intl, hb...\n        \"\"\"\n        logger.info(\"check \" + light_name + \" udp syncPilot status\")\n        udp_sync_res = target.udp.get_udp_sync_pilot(light_name, act_type)\n        logger.info(\"udp syncPilot:\" + str(udp_sync_res))\n    \n        if action == 'ON':\n            if udp_sync_res[\"params\"][\"state\"] is False:\n                logger.info(\"Error : UDP syncPilot state should be true, but was false\")\n                assert False, \"UDP syncPilot state should be true, but was false\"\n        elif action == 'OFF':\n            if udp_sync_res[\"params\"][\"state\"] is True:\n                logger.info(\"Error : UDP syncPilot state should be false, but was true\")\n>               assert False, \"UDP syncPilot state should be false, but was true\"\nE               AssertionError: UDP syncPilot state should be false, but was true\n\n..\\..\\Steps\\temperature_speed_light_mode_steps.py:365: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "target",
    "time" : {
      "start" : 1614077093793,
      "stop" : 1614077093793,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "schedule.feature: Create a schedule with action \"Bedtime\" and end with \"off\" when lamp original status is \"Warm White\"",
    "status" : "failed",
    "statusMessage" : "AssertionError: UDP syncPilot state should be false, but was true",
    "statusTrace" : "request = <FixtureRequest for <Function test_15_create_schedule_with_bedtime_end_with_off_when_lamp_status_warm_white>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x00000171EFB90A88>\nlight_name = 'light_1', action = 'OFF', act_type = 'schd'\n\n    @then(parsers.parse('Check udp syncPilot if {light_name} status is changed to {action} by {act_type}'))\n    def check_udp_syncPilot_light_status(target, light_name, action, act_type):\n        \"\"\"\n        - Narrative:\n            Check {light_name} udp syncPilot light status ON/OFF/NL\n            {act_type}: udp syncPilot src; value: udp, wizappd(tcp), schd, intl, hb...\n        \"\"\"\n        logger.info(\"check \" + light_name + \" udp syncPilot status\")\n        udp_sync_res = target.udp.get_udp_sync_pilot(light_name, act_type)\n        logger.info(\"udp syncPilot:\" + str(udp_sync_res))\n    \n        if action == 'ON':\n            if udp_sync_res[\"params\"][\"state\"] is False:\n                logger.info(\"Error : UDP syncPilot state should be true, but was false\")\n                assert False, \"UDP syncPilot state should be true, but was false\"\n        elif action == 'OFF':\n            if udp_sync_res[\"params\"][\"state\"] is True:\n                logger.info(\"Error : UDP syncPilot state should be false, but was true\")\n>               assert False, \"UDP syncPilot state should be false, but was true\"\nE               AssertionError: UDP syncPilot state should be false, but was true\n\n..\\..\\Steps\\temperature_speed_light_mode_steps.py:365: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9cfa733594308a63",
      "name" : "log",
      "source" : "9cfa733594308a63.txt",
      "type" : "text/plain",
      "size" : 5786
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Create schedule by mqtt"
  }, {
    "name" : "story",
    "value" : "Create a schedule with action \"Bedtime\" and end with \"off\" when lamp original status is \"Warm White\""
  }, {
    "name" : "tag",
    "value" : "module"
  }, {
    "name" : "tag",
    "value" : "product"
  }, {
    "name" : "tag",
    "value" : "usefixtures"
  }, {
    "name" : "parentSuite",
    "value" : "Test_Suites.Tests.daily_regression_test"
  }, {
    "name" : "suite",
    "value" : "test_07_schedule_by_mqtt"
  }, {
    "name" : "host",
    "value" : "WIZ-LENOVOPT-SH0012"
  }, {
    "name" : "thread",
    "value" : "24620-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Test_Suites.Tests.daily_regression_test.test_07_schedule_by_mqtt"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "product", "module", "usefixtures" ]
  },
  "source" : "402e07d0d1b9b889.json",
  "parameterValues" : [ ]
}