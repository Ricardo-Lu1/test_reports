{"name": "test_device_control_on_off_nl_tcp[light_1-NL-wizappd-ON]", "status": "failed", "statusDetails": {"message": "AssertionError: Error : Get UDP syncPilot timeout!", "trace": "request = <FixtureRequest for <Function test_device_control_on_off_nl_tcp[light_1-NL-wizappd-ON]>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\on_off_nl_dimming_steps.py:93: in check_device_on_off_nl_udp\n    udp_sync_res = get_udp_sync_pilot(target, light_name, act_type)\n..\\..\\Steps\\on_off_nl_dimming_steps.py:285: in get_udp_sync_pilot\n    udp_sync_res = target.udp.get_udp_sync_pilot(light_name, act_type)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Wrapper.wrapper_udp.WrapperUDP object at 0x00000171EFB90688>\nlight_name = 'light_1', src_type = 'wizappd'\n\n    def get_udp_sync_pilot(self, light_name, src_type):\n        light_mac = get_mac_from_name(light_name)\n        start_time = datetime.datetime.now()\n        while True:\n            end_time = datetime.datetime.now()\n            if not self.bl_get_sync:\n                response = self.udp_listen.server_receive_message()\n                if response is not False and response != \"test\":\n                    try:\n                        response = json.loads(response)\n                    except:\n                        continue\n                    if response[\"method\"] == \"syncPilot\":\n                        payload = response[\"params\"]\n                        if payload[\"mac\"] == light_mac and payload[\"src\"] == src_type:\n                            # self.bl_register = False\n                            print(\"UDP syncPilot:\" + str(response))\n                            # TODO close udp service\n                            return response\n            if (end_time - start_time).seconds > 10:\n                self.udp_listen.close_udp_service()\n                self.udp_listen = None\n>               assert False, \"Error : Get UDP syncPilot timeout!\"\nE               AssertionError: Error : Get UDP syncPilot timeout!\n\n..\\..\\..\\Wrapper\\wrapper_udp.py:424: AssertionError"}, "description": "03_on_off_nl_dimming.feature: ON/OFF/NL device control by TCP", "attachments": [{"name": "log", "source": "b4e24a6a-0617-475b-adea-f5919b5ffdbc-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "light_name", "value": "'light_1'"}, {"name": "action", "value": "'NL'"}, {"name": "act_type", "value": "'wizappd'"}, {"name": "pre_action", "value": "'ON'"}], "start": 1614072742001, "stop": 1614072769108, "uuid": "20c95ba4-bed4-4c21-b512-e7949fff92ff", "historyId": "240e4394cf96104bbb518d11a2aa7f61", "testCaseId": "ffe1298e83e6509297a9d2c6b2faea02", "fullName": "Test_Suites.Tests.daily_regression_test.test_03_on_off_nl_dimming#test_device_control_on_off_nl_tcp", "labels": [{"name": "story", "value": "TCP Device Control"}, {"name": "feature", "value": "ON/OFF/NL/Dimming"}, {"name": "tag", "value": "module"}, {"name": "tag", "value": "product"}, {"name": "parentSuite", "value": "Test_Suites.Tests.daily_regression_test"}, {"name": "suite", "value": "test_03_on_off_nl_dimming"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "24620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.daily_regression_test.test_03_on_off_nl_dimming"}]}