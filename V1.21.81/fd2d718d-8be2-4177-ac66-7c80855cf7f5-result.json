{"name": "test_17_create_schedule_with_bedtime_end_with_previous_mode_when_lamp_status_night_light", "status": "failed", "statusDetails": {"message": "AssertionError: Error : create schedule for light_1 fail! UDP SceneId should be 14, but was 10", "trace": "request = <FixtureRequest for <Function test_17_create_schedule_with_bedtime_end_with_previous_mode_when_lamp_status_night_light>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nc:\\users\\ricardo.lu\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x00000171EFB90A88>\nlight_name = 'light_1', light_scene = 'Night light'\n\n    @then(parsers.parse('check schedule for {light_name} keeps {light_scene} mode'))\n    def check_kepp_schedule(target, light_name, light_scene):\n        response = target.udp.get_pilot(light_name)\n        logger.info(\"udp response:\" + str(response))\n    \n        res_light_scene_id_udp = response[\"result\"][\"sceneId\"]\n    \n        expect_light_scene_id = int(translator_scene_id(light_scene))\n    \n        # check by udp getPilot\n        if res_light_scene_id_udp != expect_light_scene_id:\n            logger.info(\"Error : create schedule for \" + light_name + \" fail! UDP SceneId should be \" +\n                        str(expect_light_scene_id) + \", but was \" + str(res_light_scene_id_udp))\n            assert False, \"Error : create schedule for \" + light_name + \" fail! UDP SceneId should be \" + \\\n>                         str(expect_light_scene_id) + \", but was \" + str(res_light_scene_id_udp)\nE           AssertionError: Error : create schedule for light_1 fail! UDP SceneId should be 14, but was 10\n\n..\\..\\Steps\\schedule_action_steps.py:385: AssertionError"}, "description": "schedule.feature: Create a schedule with action \"Bedtime\" and end with \"Previous mode\" when lamp original status is \"Night Light\"", "attachments": [{"name": "log", "source": "e89c8f9f-7418-4e77-b508-1e0e4574c3bd-attachment.txt", "type": "text/plain"}], "start": 1614090124358, "stop": 1614090440660, "uuid": "6267fbd9-adfc-4e61-9f78-6f66d2adff5a", "historyId": "def45567eb11aefb0d0eb0e09e75f724", "testCaseId": "c820e48d20fb1aa445c12a6eea6212e2", "fullName": "Test_Suites.Tests.daily_regression_test.test_07_schedule_by_mqtt#test_17_create_schedule_with_bedtime_end_with_previous_mode_when_lamp_status_night_light", "labels": [{"name": "story", "value": "Create a schedule with action \"Bedtime\" and end with \"Previous mode\" when lamp original status is \"Night Light\""}, {"name": "feature", "value": "Create schedule by mqtt"}, {"name": "tag", "value": "module"}, {"name": "tag", "value": "product"}, {"name": "tag", "value": "usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.daily_regression_test"}, {"name": "suite", "value": "test_07_schedule_by_mqtt"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "24620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.daily_regression_test.test_07_schedule_by_mqtt"}]}