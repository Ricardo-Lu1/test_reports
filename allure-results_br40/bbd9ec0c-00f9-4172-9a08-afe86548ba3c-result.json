{"name": "test_24_create_two_schedule_with_wake_up_and_bedtime_and_start_time_interval_less_than_30_minutes", "status": "broken", "statusDetails": {"message": "KeyError: 'Bedtime mode, last for 60 minutes and end with previous'", "trace": "request = <FixtureRequest for <Function test_24_create_two_schedule_with_wake_up_and_bedtime_and_start_time_interval_less_than_30_minutes>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\schedule_action_steps.py:167: in create_schedule_by_mqtt_when\n    target.mqtt.set_schedule(schedule_id, light_name, light_scene, str_start_time)\n..\\..\\..\\Wrapper\\wrapper_mqtt.py:43: in set_schedule\n    light_scene_id = int(translator_scene_id(light_scene))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nscene_name = 'Bedtime mode, last for 60 minutes and end with previous'\n\n    def translator_scene_id(scene_name):\n        scene = {\n            'Warm white': \"11\",\n            'Daylight': \"12\",\n            \"Cool white\": \"13\",\n            \"Night light\": \"14\",\n            \"Cozy\": \"6\",\n            \"True colors\": \"17\",\n            \"Relax\": \"16\",\n            \"Focus\": \"15\",\n            \"TV time\": \"18\",\n            \"Candlelight\": \"29\",\n            \"Fireplace\": \"5\",\n            \"Fall\": \"22\",\n            \"Club\": \"26\",\n            \"Sunset\": \"3\",\n            \"Romance\": \"2\",\n            \"Party\": \"4\",\n            \"Pastel colors\": \"8\",\n            \"Spring\": \"20\",\n            \"Summer\": \"21\",\n            \"Forest\": \"7\",\n            \"Jungle\": \"24\",\n            \"Mojito\": \"25\",\n            \"Ocean\": \"1\",\n            \"Deep dive\": \"23\",\n            \"Pulse\": \"31\",\n            \"Golden white\": \"30\",\n            \"Steampunk\": \"32\",\n            \"Wake-up\": \"9\",\n            \"Bedtime\": \"10\",\n            \"Christmas\": \"27\",\n            \"Halloween\": \"28\",\n            \"Plant growth\": \"19\",\n            \"Off\": \"0\",\n        }\n>       return scene[scene_name]\nE       KeyError: 'Bedtime mode, last for 60 minutes and end with previous'\n\n..\\..\\..\\Utils\\language_translator.py:83: KeyError"}, "description": "schedule.feature: Create two schedule with action \"Wake-up\" and \"Bedtime\",and the start time interval is less than 30 minutes", "attachments": [{"name": "log", "source": "ac1fb53a-2a9e-404a-aaa2-ede1ae3160a9-attachment.txt", "type": "text/plain"}], "start": 1608630735293, "stop": 1608630749148, "uuid": "7367a3b7-ba6d-4f63-bb71-fd407e0715d6", "historyId": "1d0dbe62340bead42a29778b01027d4e", "testCaseId": "218e443f981fdb6336b6c5a3a3ca9b31", "fullName": "Test_Suites.Tests.test_regression_product.test_07_schedule_by_mqtt#test_24_create_two_schedule_with_wake_up_and_bedtime_and_start_time_interval_less_than_30_minutes", "labels": [{"name": "story", "value": "Create two schedule with action \"Wake-up\" and \"Bedtime\",and the start time interval is less than 30 minutes"}, {"name": "feature", "value": "Create schedule by mqtt"}, {"name": "tag", "value": "usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.test_regression_product"}, {"name": "suite", "value": "test_07_schedule_by_mqtt"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "14944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.test_regression_product.test_07_schedule_by_mqtt"}]}