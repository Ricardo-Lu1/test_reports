{"name": "test_single_device_control_change_mode_tw[light_2-Night light-udp]", "status": "failed", "statusDetails": {"message": "AssertionError: Error:Get UDP response timeout!", "trace": "request = <FixtureRequest for <Function test_single_device_control_change_mode_tw[light_2-Night light-udp]>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\control_lamp_steps.py:872: in change_light_mode\n    target.udp.change_light_scene(light_name, light_mode)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Wrapper.wrapper_udp.WrapperUDP object at 0x0000014BEA9A1D48>\nlight_name = 'light_2', scene_name = 'Night light', custom_ip = ''\n\n    def change_light_scene(self, light_name, scene_name, custom_ip=\"\"):\n        response = None\n        self.phone_udp_cmd = PhoneUdpCmd()\n        if custom_ip == \"\":\n            light_ip = get_ip_from_name(light_name)\n        else:\n            light_ip = custom_ip\n        self.udp_communication = UdpCommunication(light_ip)\n    \n        scene_id = translator_scene_id(scene_name)\n        cmd = json_to_string(self.phone_udp_cmd.change_light_scene_cmd(scene_id))\n        print(\"udp send : \" + cmd)\n    \n        # send set light command\n        self.udp_communication.client_send_message(cmd)\n        time.sleep(1)\n    \n        for i in range(3):\n            response = self.udp_communication.client_receive_message()\n            if response is not False:\n                print(\"udp receive : \" + response)\n                break\n            else:\n                if i == 2:\n>                   assert False, \"Error:Get UDP response timeout!\"\nE                   AssertionError: Error:Get UDP response timeout!\n\n..\\..\\..\\Wrapper\\wrapper_udp.py:318: AssertionError"}, "description": "single_device_control_by_udp.feature: Single device control - Change default light mode for TW device", "attachments": [{"name": "log", "source": "79773d11-6023-4a88-8f69-452067142613-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "light_name", "value": "'light_2'"}, {"name": "light_mode", "value": "'Night light'"}, {"name": "act_type", "value": "'udp'"}], "start": 1608713657193, "stop": 1608713679268, "uuid": "a1ca788b-3b26-4cbf-b5b0-9b2e92cc02a2", "historyId": "ae121af271681a06e363d16f7eff516c", "testCaseId": "28899d51f984119cbbba0575ef22e2cb", "fullName": "Test_Suites.Tests.test_regression_product.test_05_udp_communication#test_single_device_control_change_mode_tw", "labels": [{"name": "feature", "value": "UDP Communication"}, {"name": "story", "value": "Device Control"}, {"name": "parentSuite", "value": "Test_Suites.Tests.test_regression_product"}, {"name": "suite", "value": "test_05_udp_communication"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "6432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.test_regression_product.test_05_udp_communication"}]}