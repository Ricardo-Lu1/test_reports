{
  "uid" : "31a250a02a2b5846",
  "name" : "test_17_trigger_schedule_when_rhythm_playing_by_mqtt",
  "fullName" : "Test_Suites.Tests.test_regression_product.test_08_rhythm_by_mqtt#test_17_trigger_schedule_when_rhythm_playing_by_mqtt",
  "historyId" : "8fd09485eac4ebd25fc174b0e729a53c",
  "time" : {
    "start" : 1608770471436,
    "stop" : 1608770500425,
    "duration" : 28989
  },
  "description" : "rhythm.feature: Trigger a schedule when rhythm playing",
  "descriptionHtml" : "<p>rhythm.feature: Trigger a schedule when rhythm playing</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Error : check scene id by udp syncPilot fail! Scene id should be 18, but was 12",
  "statusTrace" : "request = <FixtureRequest for <Function test_17_trigger_schedule_when_rhythm_playing_by_mqtt>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x0000021D24EC2A88>\nrhythm_id = 2, light_name = 'light_1', scene_name = 'TV time'\n\n    @then(parsers.parse('check rhythm {rhythm_id} for {light_name} with scene {scene_name}'))\n    def check_rhythm(target, rhythm_id, light_name, scene_name):\n        time.sleep(5)\n        rhythm_id = int(rhythm_id)\n        scene_id = int(translator_scene_id(scene_name))\n    \n        udp_sync_res = target.udp.get_udp_sync_pilot(light_name, \"intl\")\n        logger.info(\"udp syncPilot:\" + str(udp_sync_res))\n    \n        mqtt_res = target.mqtt.get_res_mqtt_sync_pilot(light_name)\n        if mqtt_res is None:\n            logger.info(\"Error : MQTT did not get syncPilot from device!\")\n            assert False, \"Error : MQTT did not get syncPilot from device!\"\n        else:\n            logger.info(\"mqtt syncPilot:\" + str(mqtt_res))\n    \n        res_get_pilot = target.udp.get_pilot_phone(light_name)\n        logger.info(\"udp response:\" + str(res_get_pilot))\n    \n        scene_id_udp = int(res_get_pilot[\"result\"][\"sceneId\"])\n        scene_id_udp_sync = int(udp_sync_res[\"params\"][\"sceneId\"])\n        scene_id_mqtt = int(mqtt_res[\"params\"][\"sceneId\"])\n    \n        # check by udp syncPilot cmd\n        if \"schdPsetId\" in json_to_string(udp_sync_res):\n            schdpset_id_udp_sync = int(udp_sync_res[\"params\"][\"schdPsetId\"])\n        else:\n            logger.info(\"Error : Error : check schdPset id by udp syncPilot fail! Do not find schdPsetId.\")\n            assert False, \"Error : Error : check schdPset id by udp syncPilot fail! Do not find schdPsetId.\"\n        if scene_id_udp_sync != scene_id:\n            logger.info(\"Error : check scene id by udp syncPilot fail! Scene id should be \"\n                        + str(scene_id) + \", but was \" + str(scene_id_udp_sync))\n            assert False, \"Error : check scene id by udp syncPilot fail! Scene id should be \" \\\n>                         + str(scene_id) + \", but was \" + str(scene_id_udp_sync)\nE           AssertionError: Error : check scene id by udp syncPilot fail! Scene id should be 18, but was 12\n\n..\\..\\Steps\\rhythm_action_steps.py:157: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "rhythm.feature: Trigger a schedule when rhythm playing",
    "status" : "failed",
    "statusMessage" : "AssertionError: Error : check scene id by udp syncPilot fail! Scene id should be 18, but was 12",
    "statusTrace" : "request = <FixtureRequest for <Function test_17_trigger_schedule_when_rhythm_playing_by_mqtt>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x0000021D24EC2A88>\nrhythm_id = 2, light_name = 'light_1', scene_name = 'TV time'\n\n    @then(parsers.parse('check rhythm {rhythm_id} for {light_name} with scene {scene_name}'))\n    def check_rhythm(target, rhythm_id, light_name, scene_name):\n        time.sleep(5)\n        rhythm_id = int(rhythm_id)\n        scene_id = int(translator_scene_id(scene_name))\n    \n        udp_sync_res = target.udp.get_udp_sync_pilot(light_name, \"intl\")\n        logger.info(\"udp syncPilot:\" + str(udp_sync_res))\n    \n        mqtt_res = target.mqtt.get_res_mqtt_sync_pilot(light_name)\n        if mqtt_res is None:\n            logger.info(\"Error : MQTT did not get syncPilot from device!\")\n            assert False, \"Error : MQTT did not get syncPilot from device!\"\n        else:\n            logger.info(\"mqtt syncPilot:\" + str(mqtt_res))\n    \n        res_get_pilot = target.udp.get_pilot_phone(light_name)\n        logger.info(\"udp response:\" + str(res_get_pilot))\n    \n        scene_id_udp = int(res_get_pilot[\"result\"][\"sceneId\"])\n        scene_id_udp_sync = int(udp_sync_res[\"params\"][\"sceneId\"])\n        scene_id_mqtt = int(mqtt_res[\"params\"][\"sceneId\"])\n    \n        # check by udp syncPilot cmd\n        if \"schdPsetId\" in json_to_string(udp_sync_res):\n            schdpset_id_udp_sync = int(udp_sync_res[\"params\"][\"schdPsetId\"])\n        else:\n            logger.info(\"Error : Error : check schdPset id by udp syncPilot fail! Do not find schdPsetId.\")\n            assert False, \"Error : Error : check schdPset id by udp syncPilot fail! Do not find schdPsetId.\"\n        if scene_id_udp_sync != scene_id:\n            logger.info(\"Error : check scene id by udp syncPilot fail! Scene id should be \"\n                        + str(scene_id) + \", but was \" + str(scene_id_udp_sync))\n            assert False, \"Error : check scene id by udp syncPilot fail! Scene id should be \" \\\n>                         + str(scene_id) + \", but was \" + str(scene_id_udp_sync)\nE           AssertionError: Error : check scene id by udp syncPilot fail! Scene id should be 18, but was 12\n\n..\\..\\Steps\\rhythm_action_steps.py:157: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1d49705b62d48233",
      "name" : "log",
      "source" : "1d49705b62d48233.txt",
      "type" : "text/plain",
      "size" : 8453
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Trigger a schedule when rhythm playing"
  }, {
    "name" : "feature",
    "value" : "Test cases for rhythm"
  }, {
    "name" : "tag",
    "value" : "usefixtures"
  }, {
    "name" : "parentSuite",
    "value" : "Test_Suites.Tests.test_regression_product"
  }, {
    "name" : "suite",
    "value" : "test_08_rhythm_by_mqtt"
  }, {
    "name" : "host",
    "value" : "WIZ-LENOVOPT-SH0012"
  }, {
    "name" : "thread",
    "value" : "18908-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Test_Suites.Tests.test_regression_product.test_08_rhythm_by_mqtt"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "usefixtures" ]
  },
  "source" : "31a250a02a2b5846.json",
  "parameterValues" : [ ]
}