{
  "uid" : "a9936755858a8ac3",
  "name" : "test_24_create_two_schedule_with_wake_up_and_bedtime_and_start_time_interval_less_than_30_minutes",
  "fullName" : "Test_Suites.Tests.test_regression_product.test_07_schedule_by_mqtt#test_24_create_two_schedule_with_wake_up_and_bedtime_and_start_time_interval_less_than_30_minutes",
  "historyId" : "1d0dbe62340bead42a29778b01027d4e",
  "time" : {
    "start" : 1608690231782,
    "stop" : 1608690246170,
    "duration" : 14388
  },
  "description" : "schedule.feature: Create two schedule with action \"Wake-up\" and \"Bedtime\",and the start time interval is less than 30 minutes",
  "descriptionHtml" : "<p>schedule.feature: Create two schedule with action &quot;Wake-up&quot; and &quot;Bedtime&quot;,and the start time interval is less than 30 minutes</p>\n",
  "status" : "broken",
  "statusMessage" : "KeyError: 'Bedtime mode, last for 60 minutes and end with previous'",
  "statusTrace" : "request = <FixtureRequest for <Function test_24_create_two_schedule_with_wake_up_and_bedtime_and_start_time_interval_less_than_30_minutes>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\schedule_action_steps.py:167: in create_schedule_by_mqtt_when\n    target.mqtt.set_schedule(schedule_id, light_name, light_scene, str_start_time)\n..\\..\\..\\Wrapper\\wrapper_mqtt.py:43: in set_schedule\n    light_scene_id = int(translator_scene_id(light_scene))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nscene_name = 'Bedtime mode, last for 60 minutes and end with previous'\n\n    def translator_scene_id(scene_name):\n        scene = {\n            'Warm white': \"11\",\n            'Daylight': \"12\",\n            \"Cool white\": \"13\",\n            \"Night light\": \"14\",\n            \"Cozy\": \"6\",\n            \"True colors\": \"17\",\n            \"Relax\": \"16\",\n            \"Focus\": \"15\",\n            \"TV time\": \"18\",\n            \"Candlelight\": \"29\",\n            \"Fireplace\": \"5\",\n            \"Fall\": \"22\",\n            \"Club\": \"26\",\n            \"Sunset\": \"3\",\n            \"Romance\": \"2\",\n            \"Party\": \"4\",\n            \"Pastel colors\": \"8\",\n            \"Spring\": \"20\",\n            \"Summer\": \"21\",\n            \"Forest\": \"7\",\n            \"Jungle\": \"24\",\n            \"Mojito\": \"25\",\n            \"Ocean\": \"1\",\n            \"Deep dive\": \"23\",\n            \"Pulse\": \"31\",\n            \"Golden white\": \"30\",\n            \"Steampunk\": \"32\",\n            \"Wake-up\": \"9\",\n            \"Bedtime\": \"10\",\n            \"Christmas\": \"27\",\n            \"Halloween\": \"28\",\n            \"Plant growth\": \"19\",\n            \"Off\": \"0\",\n        }\n>       return scene[scene_name]\nE       KeyError: 'Bedtime mode, last for 60 minutes and end with previous'\n\n..\\..\\..\\Utils\\language_translator.py:83: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "target",
    "time" : {
      "start" : 1608687403335,
      "stop" : 1608687403335,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "schedule.feature: Create two schedule with action \"Wake-up\" and \"Bedtime\",and the start time interval is less than 30 minutes",
    "status" : "broken",
    "statusMessage" : "KeyError: 'Bedtime mode, last for 60 minutes and end with previous'",
    "statusTrace" : "request = <FixtureRequest for <Function test_24_create_two_schedule_with_wake_up_and_bedtime_and_start_time_interval_less_than_30_minutes>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\schedule_action_steps.py:167: in create_schedule_by_mqtt_when\n    target.mqtt.set_schedule(schedule_id, light_name, light_scene, str_start_time)\n..\\..\\..\\Wrapper\\wrapper_mqtt.py:43: in set_schedule\n    light_scene_id = int(translator_scene_id(light_scene))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nscene_name = 'Bedtime mode, last for 60 minutes and end with previous'\n\n    def translator_scene_id(scene_name):\n        scene = {\n            'Warm white': \"11\",\n            'Daylight': \"12\",\n            \"Cool white\": \"13\",\n            \"Night light\": \"14\",\n            \"Cozy\": \"6\",\n            \"True colors\": \"17\",\n            \"Relax\": \"16\",\n            \"Focus\": \"15\",\n            \"TV time\": \"18\",\n            \"Candlelight\": \"29\",\n            \"Fireplace\": \"5\",\n            \"Fall\": \"22\",\n            \"Club\": \"26\",\n            \"Sunset\": \"3\",\n            \"Romance\": \"2\",\n            \"Party\": \"4\",\n            \"Pastel colors\": \"8\",\n            \"Spring\": \"20\",\n            \"Summer\": \"21\",\n            \"Forest\": \"7\",\n            \"Jungle\": \"24\",\n            \"Mojito\": \"25\",\n            \"Ocean\": \"1\",\n            \"Deep dive\": \"23\",\n            \"Pulse\": \"31\",\n            \"Golden white\": \"30\",\n            \"Steampunk\": \"32\",\n            \"Wake-up\": \"9\",\n            \"Bedtime\": \"10\",\n            \"Christmas\": \"27\",\n            \"Halloween\": \"28\",\n            \"Plant growth\": \"19\",\n            \"Off\": \"0\",\n        }\n>       return scene[scene_name]\nE       KeyError: 'Bedtime mode, last for 60 minutes and end with previous'\n\n..\\..\\..\\Utils\\language_translator.py:83: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3d7472317b3254b3",
      "name" : "log",
      "source" : "3d7472317b3254b3.txt",
      "type" : "text/plain",
      "size" : 1708
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Create schedule by mqtt"
  }, {
    "name" : "story",
    "value" : "Create two schedule with action \"Wake-up\" and \"Bedtime\",and the start time interval is less than 30 minutes"
  }, {
    "name" : "tag",
    "value" : "usefixtures"
  }, {
    "name" : "parentSuite",
    "value" : "Test_Suites.Tests.test_regression_product"
  }, {
    "name" : "suite",
    "value" : "test_07_schedule_by_mqtt"
  }, {
    "name" : "host",
    "value" : "WIZ-LENOVOPT-SH0012"
  }, {
    "name" : "thread",
    "value" : "15048-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Test_Suites.Tests.test_regression_product.test_07_schedule_by_mqtt"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "usefixtures" ]
  },
  "source" : "a9936755858a8ac3.json",
  "parameterValues" : [ ]
}