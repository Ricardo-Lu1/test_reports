{"name": "test_single_device_control_on_off_nl[light_1-OFF-udp1]", "status": "failed", "statusDetails": {"message": "AssertionError: Error : Get MQTT syncPilot timeout!", "trace": "request = <FixtureRequest for <Function test_single_device_control_on_off_nl[light_1-OFF-udp1]>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n..\\..\\Steps\\control_lamp_steps.py:592: in check_light_on_off_nl\n    mqtt_res = target.mqtt.get_res_mqtt_sync_pilot(light_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Wrapper.wrapper_mqtt.WrapperMQTT object at 0x000002647AAB1048>\nlight_name = 'light_1'\n\n    def get_res_mqtt_sync_pilot(self, light_name):\n        topic = self.cloud_mqtt_cmd.create_topic_from_light(light_name)\n        start_time = datetime.datetime.now()\n        while True:\n            for mqtt_client in self.list_mqtt_client:\n                rcv_topic, rcv_msg = mqtt_client.get_subscribe_topic_message()\n                if topic == rcv_topic:\n                    if rcv_msg[\"method\"] == \"syncPilot\":\n                        print(\"MQTT:\" + str(rcv_msg))\n                        mqtt_client.clear_subscribe_topic_message()\n                        return rcv_msg\n            if (datetime.datetime.now() - start_time).seconds > 10:\n>               assert False, \"Error : Get MQTT syncPilot timeout!\"\nE               AssertionError: Error : Get MQTT syncPilot timeout!\n\n..\\..\\..\\Wrapper\\wrapper_mqtt.py:406: AssertionError"}, "description": "single_device_control_by_udp.feature: Single device control - ON/OFF/NL", "attachments": [{"name": "log", "source": "81b3be39-933c-4dfc-9f38-0275e8b2b3b4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "light_name", "value": "'light_1'"}, {"name": "action", "value": "'OFF'"}, {"name": "act_type", "value": "'udp'"}], "start": 1608793457653, "stop": 1608793476296, "uuid": "610d2d2b-864a-495a-abc8-2a77cfb5974a", "historyId": "48a4120eefd7cc34abf2bfa3bc53bd1f", "testCaseId": "011c357d17ec042f197b602abe3363fb", "fullName": "Test_Suites.Tests.test_regression_product.test_05_udp_communication#test_single_device_control_on_off_nl", "labels": [{"name": "feature", "value": "UDP Communication"}, {"name": "story", "value": "Device Control"}, {"name": "parentSuite", "value": "Test_Suites.Tests.test_regression_product"}, {"name": "suite", "value": "test_05_udp_communication"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "13276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.test_regression_product.test_05_udp_communication"}]}