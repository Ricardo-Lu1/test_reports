{"name": "test_25_create_two_schedule_with_bedtime_and_wake_up_and_start_time_interval_less_than_30_minutes", "status": "failed", "statusDetails": {"message": "AssertionError: UDP state should be true, but was false", "trace": "request = <FixtureRequest for <Function test_25_create_two_schedule_with_bedtime_and_wake_up_and_start_time_interval_less_than_30_minutes>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:189: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nC:\\Users\\Ricardo.Lu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pytest_bdd\\scenario.py:130: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntarget = <Wrapper.wrapper_manage.WrapperManage object at 0x000002C0A0389288>\nlight_name = 'light_1', action = 'ON'\n\n    @then(parsers.parse('check {light_name} keeps status {action}'))\n    def check_light_keeps_status(target, light_name, action):\n        logger.info(\"check light status\")\n        response = target.udp.get_pilot_phone(light_name)\n        logger.info(\"udp response:\" + str(response))\n    \n        if action == 'ON':\n            if response[\"result\"][\"state\"] is False:\n                logger.info(\"Error : UDP state should be true, but was false\")\n>               assert False, \"UDP state should be true, but was false\"\nE               AssertionError: UDP state should be true, but was false\n\n..\\..\\Steps\\schedule_action_steps.py:324: AssertionError"}, "description": "schedule.feature: Create two schedule with action \"Bedtime\" and \"Wake-up\",and the start time interval is less than 30 minutes", "attachments": [{"name": "log", "source": "6ed4dd70-1c2a-4619-8f63-a7b84ebe16d3-attachment.txt", "type": "text/plain"}], "start": 1608776543759, "stop": 1608779313042, "uuid": "2b3e50c7-f9b7-44f8-8541-ed4ca55d83ee", "historyId": "46bdedf3f488efaee73b8146bdfb3ed4", "testCaseId": "8e0dcd9f5928a6f0b7ddb44f16e987cd", "fullName": "Test_Suites.Tests.test_regression_product.test_07_schedule_by_mqtt#test_25_create_two_schedule_with_bedtime_and_wake_up_and_start_time_interval_less_than_30_minutes", "labels": [{"name": "feature", "value": "Create schedule by mqtt"}, {"name": "story", "value": "Create two schedule with action \"Bedtime\" and \"Wake-up\",and the start time interval is less than 30 minutes"}, {"name": "tag", "value": "usefixtures"}, {"name": "parentSuite", "value": "Test_Suites.Tests.test_regression_product"}, {"name": "suite", "value": "test_07_schedule_by_mqtt"}, {"name": "host", "value": "WIZ-LENOVOPT-SH0012"}, {"name": "thread", "value": "14092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Suites.Tests.test_regression_product.test_07_schedule_by_mqtt"}]}